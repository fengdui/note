<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper    
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xh.market.business.time.dao.TimeTaskDao">
	<resultMap type="TimeTask" id="resultMap">
		<id property="id" column="ID" />
		<result property="name" column="NAME" />
		<result property="className" column="CLASS_NAME" />
		<result property="method" column="METHOD" />
		<result property="cronExpress" column="CRON_EXPRESS" />
		<result property="jobName" column="JOB_NAME" />
		<result property="groupName" column="GROUP_NAME" />
		<result property="selfStart" column="SELF_START" />
		<result property="comment" column="COMMENT" />
		<result property="createUser" column="CREATE_USER" />
		<result property="createTime" column="CREATE_TIME" />
		<result property="modifyUser" column="MODIFY_USER" />
		<result property="modifyTime" column="MODIFY_TIME" />
		<result property="deleted" column="DELETED" />
	</resultMap>
	<sql id="table">
		tbl_timetask_info
	</sql>
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO
		<include refid="table" />
		(
		<trim suffixOverrides=",">
			<if test="name != null"> name, </if>
			<if test="className != null"> class_name, </if>
			<if test="method != null"> method, </if>
			<if test="cronExpress != null"> cron_express, </if>
			<if test="jobName != null"> job_name, </if>
			<if test="groupName != null"> group_name, </if>
			<if test="selfStart != null"> self_start, </if>
			<if test="comment != null">comment,</if>
			<if test="createUser != null">create_user,</if>
			<if test="createTime != null">create_time,</if>
			<if test="modifyUser != null">modify_user,</if>
			<if test="modifyTime != null">modify_time,</if>
		</trim>
		) VALUES (
		<trim suffixOverrides=",">
			<if test="name != null"> #{name}, </if>
			<if test="className != null"> #{className}, </if>
			<if test="method != null"> #{method}, </if>
			<if test="cronExpress != null"> #{cronExpress}, </if>
			<if test="jobName != null"> #{jobName}, </if>
			<if test="groupName != null"> #{groupName}, </if>
			<if test="selfStart != null"> #{selfStart}, </if>
			<if test="comment != null">#{comment},</if>
			<if test="createUser != null">#{createUser},</if>
			<if test="createTime != null">#{createTime},</if>
			<if test="modifyUser != null">#{modifyUser},</if>
			<if test="modifyTime != null">#{modifyTime},</if>
		</trim>
		)
	</insert>
	<delete id="deleteBatch" parameterType="java.util.List" statementType="STATEMENT">
		DELETE FROM <include refid="table"/>
		WHERE id in 
		<foreach collection="list" index="index" item="item" separator="," open="(" close=")">
			${item}
		</foreach>
	</delete>
	<update id="update">
		UPDATE <include refid="table"/>
		<set>
			<if test="name != null">name = #{name}, </if>
			<if test="className != null"> class_name = #{className}, </if>
			<if test="method != null"> method = #{method}, </if>
			<if test="cronExpress != null"> cron_express = #{cronExpress}, </if>
			<if test="jobName != null"> job_name = #{jobName}, </if>
			<if test="groupName != null"> group_name = #{groupName}, </if>
			<if test="selfStart != null"> self_start = #{selfStart}, </if>
			<if test="comment != null">comment = #{comment},</if>
			<if test="createUser != null">create_user = #{createUser},</if>
			<if test="createTime != null">create_time = #{createTime},</if>
			<if test="modifyUser != null">modify_user = #{modifyUser},</if>
			<if test="modifyTime != null">modify_time = #{modifyTime},</if>
		</set>
		WHERE id = #{id}
	</update>
	<update id="updateMultiValueByMultiValue" statementType="STATEMENT">
		UPDATE <include refid="table" />
		SET
		<foreach item="item" index="index" collection="cols" separator=" ,">
			<if test="vals[index] != null">
			${cols[index]} = ${vals[index]}
			</if>
			<if test="vals[index] == null">
			${cols[index]} = null
			</if>
		</foreach>
		WHERE
		<foreach item="item" index="index" collection="keyCols" separator=" and">
			${keyCols[index]} = ${keyVals[index]}
		</foreach>
	</update>
	<select id="queryAll" resultMap="resultMap" statementType="STATEMENT">
		SELECT * FROM <include refid="table"/>
	</select>
	<select id="queryByMultiValue" resultMap="resultMap" statementType="STATEMENT">
		SELECT *
		FROM <include refid="table" />
		WHERE
		<foreach item="item" index="index" collection="cols" separator=" and">
			${cols[index]} = ${vals[index]}
		</foreach>
	</select>
	<select id="queryUniqueByMultiValue" resultMap="resultMap" statementType="STATEMENT">
		SELECT *
		FROM <include refid="table" />
		WHERE
		<foreach index="index" item="item" collection="cols" separator=" and">
			${cols[index]} = ${vals[index]}
		</foreach>
	</select>
	<select id="queryByPage" resultMap="resultMap" statementType="STATEMENT">
		SELECT * FROM
		<include refid="table" />
		<where>
			<if test="filters.size() > 0">
				<foreach item="item" index="index" collection="filters"
					separator=" and">
					<if test="filters[index].sql == null">
						${filters[index].propertyName} ${filters[index].matchType} ${filters[index].propertyValue}
					</if>
					<if test="filters[index].sql != null">
						${filters[index].sql}
					</if>
				</foreach>
			</if>
		</where>
	</select>
	<select id="isUniqueByMultiValue" resultType="java.lang.Boolean" statementType="STATEMENT">
		SELECT count(1) = 0
		FROM <include refid="table" />
		WHERE
		<foreach item="item" index="index" collection="cols" separator=" and">
			${cols[index]} = ${vals[index]}
		</foreach>
	</select>
</mapper>