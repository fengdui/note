<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper    
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xh.market.business.sys.dao.MenuDao">

	<resultMap type="Menu" id="resultMap">
		<id property="id" column="ID" />
		<result property="parentId" column="PARENT_ID" />
		<result property="icon" column="ICON" />
		<result property="name" column="NAME" />
		<result property="url" column="URL" />
		<result property="seq" column="SEQ" />
		<result property="level" column="LEVEL" />
		<result property="description" column="DESCRIPTION" />
		<result property="createUser" column="CREATE_USER" />
		<result property="createTime" column="CREATE_TIME" />
		<result property="modifyUser" column="MODIFY_USER" />
		<result property="modifyTime" column="MODIFY_TIME" />
		<result property="deleted" column="DELETED" />
	</resultMap>

	<sql id="table">
		tbl_sys_menu
	</sql>
	
	<select id="getSeqMax" resultType="java.lang.Short">
		SELECT MAX (seq)
		FROM <include refid="table" />
		WHERE parent_id = #{parentId} AND deleted = FALSE
	</select>
	
	<update id="batchChangeSeq">
		UPDATE <include refid="table" />
		SET seq = seq + #{step}, modify_time = now(), modify_user = #{modifyUser}
		WHERE parent_id = #{parentId} and seq &gt;= #{seqBegin} and deleted = false
	</update>
	
	<select id="getMenuListByRolegroupId" resultMap="resultMap">
		SELECT m.*
		FROM <include refid="table" /> m, tbl_sys_rolegroup_menu_ref r
		WHERE m.id = r.menu_id AND r.rolegroup_id = #{rolegroupId}
	</select>
	
	<select id="getMenuListByRoleId" resultMap="resultMap">
		SELECT m.*
		FROM <include refid="table" /> m, tbl_sys_role_menu_ref r
		WHERE m.id = r.menu_id AND r.role_id = #{roleId}
	</select>
	
	<select id="getMenuListByUserId" resultMap="resultMap">
		SELECT m.*
		FROM <include refid="table" /> m, tbl_auth_user_menu_ref r
		WHERE m.id = r.menu_id AND r.user_id = #{userId}
	</select>
	
	<!-- ************************************************** 分割线 ************************************************** -->

	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO <include refid="table" />
		(
		<trim suffixOverrides=",">
			<if test="parentId != null"> parent_id, </if>
			<if test="icon != null"> icon, </if>
			<if test="name != null"> name, </if>
			<if test="url != null"> url, </if>
			<if test="seq != null"> seq, </if>
			<if test="level != null"> level, </if>
			<if test="description != null"> description, </if>
			<if test="createUser != null"> create_user, </if>
			<if test="modifyUser != null"> modify_user, </if>
		</trim>
		) VALUES (
		<trim suffixOverrides=",">
			<if test="parentId != null"> #{parentId}, </if>
			<if test="icon != null"> #{icon}, </if>
			<if test="name != null"> #{name}, </if>
			<if test="url != null"> #{url}, </if>
			<if test="seq != null"> #{seq}, </if>
			<if test="level != null"> #{level}, </if>
			<if test="description != null"> #{description}, </if>
			<if test="createUser != null"> #{createUser}, </if>
			<if test="modifyUser != null"> #{modifyUser}, </if>
		</trim>
		)
	</insert>

	<insert id="insertBySql" statementType="STATEMENT">
		INSERT INTO <include refid="table" /> ${sql}
	</insert>

	<insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true">
		INSERT INTO <include refid="table" />
			(parent_id, icon, name, url, seq, level, description, create_user, modify_user)
		VALUES
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.parentId}, #{item.icon}, #{item.name}, #{item.url}, #{item.seq}, #{item.level}, #{item.description}, #{item.createUser}, #{item.modifyUser})
		</foreach>
	</insert>
	
	<delete id="deleteBySql" statementType="STATEMENT">
		DELETE FROM <include refid="table" /> ${sql}
	</delete>
	
	<delete id="deleteByMultiValue" statementType="STATEMENT">
		DELETE FROM <include refid="table"/>
		WHERE 
		<foreach item="item" index="index" collection="cols" separator=" and">
			${cols[index]} = ${vals[index]}
		</foreach>
	</delete>
	
	<update id="update">
		UPDATE <include refid="table" />
		<set>
			parent_id = #{parentId},
			icon = #{icon},
			name = #{name},
			url = #{url},
			seq = #{seq},
			level = #{level},
			description = #{description},
			modify_time = now(),
			modify_user = #{modifyUser}
		</set>
		WHERE
			ID = #{id}
	</update>
	
	<update id="updateBySql" statementType="STATEMENT">
		UPDATE <include refid="table" /> ${sql}
	</update>
	
	<update id="updateMultiValueByMultiValue" statementType="STATEMENT">
		UPDATE <include refid="table" />
		SET
		<foreach item="item" index="index" collection="cols" separator=" ,">
			<if test="vals[index] != null">
			${cols[index]} = ${vals[index]}
			</if>
			<if test="vals[index] == null">
			${cols[index]} = null
			</if>
		</foreach>
		WHERE
		<foreach item="item" index="index" collection="keyCols" separator=" and">
			${keyCols[index]} = ${keyVals[index]}
		</foreach>
	</update>

	<select id="queryBySql" resultMap="resultMap" statementType="STATEMENT">
		SELECT * FROM <include refid="table" /> 
		<where>
			<if test="sqls.length > 0">
				<foreach item="item" index="index" collection="sqls" separator=" and">
					${item}
				</foreach>
			</if>
		</where>
		<if test="orders != null">
			<if test="orders.length > 0">
				ORDER BY
				<foreach item="item" index="index" collection="orders" separator=" ,">
					${item}
				</foreach>
			</if>
		</if>
	</select>

	<select id="queryUniqueByMultiValue" resultMap="resultMap" statementType="STATEMENT">
		SELECT *
		FROM <include refid="table" />
		WHERE
		<foreach index="index" item="item" collection="cols" separator=" and">
			${cols[index]} = ${vals[index]}
		</foreach>
	</select>
	
	<select id="queryByMultiValue" resultMap="resultMap" statementType="STATEMENT">
		SELECT *
		FROM <include refid="table" />
		WHERE
		<foreach item="item" index="index" collection="cols" separator=" and">
			${cols[index]} = ${vals[index]}
		</foreach>
	</select>
	
	<select id="queryByMultiValueByMultiOrder" resultMap="resultMap" statementType="STATEMENT">
		SELECT * 
		FROM <include refid="table"/>
		WHERE
		<foreach item="item" index="index" collection="cols" separator=" and">
			${cols[index]} = ${vals[index]}
		</foreach>
		ORDER BY
		<foreach item="item" index="index" collection="orderBys" separator=", ">
			${orderBys[index]} ${orders[index]}
		</foreach>
	</select>
	
	<select id="queryCountByMultiValue" resultType="java.lang.Integer" statementType="STATEMENT">
		SELECT count(1) 
		FROM <include refid="table"/>
		WHERE
		<foreach item="item" index="index" collection="cols" separator=" and">
			${cols[index]} = ${vals[index]}
		</foreach>
	</select>
	
	<select id="queryByPage" resultMap="resultMap" statementType="STATEMENT">
		SELECT * 
		FROM <include refid="table"/>
		<where>
			<if test="filters.size() > 0">
				<foreach item="item" index="index" collection="filters" separator=" and">
					<if test="filters[index].sql == null">
						${filters[index].propertyName} ${filters[index].matchType} ${filters[index].propertyValue}
					</if>
					<if test="filters[index].sql != null">
						${filters[index].sql}
					</if>
				</foreach>
			</if>
		</where>
	</select>
	
	<select id="queryByLikeValue" resultMap="resultMap" statementType="STATEMENT">
		SELECT * 
		FROM <include refid="table"/>
		WHERE ${col} LIKE CONCAT('%', '${val}', '%')
	</select>

	<select id="isUniqueByMultiValue" resultType="java.lang.Boolean" statementType="STATEMENT">
		SELECT count(1) = 0
		FROM <include refid="table" />
		WHERE
		<foreach item="item" index="index" collection="cols" separator=" and">
			${cols[index]} = ${vals[index]}
		</foreach>
	</select>

</mapper>
