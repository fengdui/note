<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper    
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xh.market.business.res.dao.ApkIconDao">

	<resultMap type="ApkIcon" id="resultMap">
		<id property="id" column="ID" />
		<result property="apkId" column="APK_ID" />
		<result property="dpiType" column="DPI_TYPE" />
		<result property="fileId" column="FILE_ID" />
		<result property="width" column="WIDTH" />
		<result property="height" column="HEIGHT" />
	</resultMap>

	<sql id="table">
		tbl_res_apk_icon
	</sql>
	
	<select id="getIconFileId" resultType="java.lang.String">
		SELECT file_id
		FROM <include refid="table" />
		WHERE apk_id = #{apkId} and dpi_type = #{dpiType}
	</select>
	
	<select id="getIconFileIdListByApkId" resultType="java.lang.String">
		SELECT file_id
		FROM <include refid="table" />
		WHERE apk_id = #{apkId}
	</select>
	
	<!-- ************************************************** 分割线 ************************************************** -->

	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO <include refid="table" />
		(
		<trim suffixOverrides=",">
			<if test="apkId != null"> apk_id, </if>
			<if test="dpiType != null"> dpi_type, </if>
			<if test="fileId != null"> file_id, </if>
			<if test="width != null"> width, </if>
			<if test="height != null"> height, </if>
		</trim>
		) VALUES (
		<trim suffixOverrides=",">
			<if test="apkId != null"> #{apkId}, </if>
			<if test="dpiType != null"> #{dpiType}, </if>
			<if test="fileId != null"> #{fileId}, </if>
			<if test="width != null"> #{width}, </if>
			<if test="height != null"> #{height}, </if>
		</trim>
		)
	</insert>

	<insert id="insertBySql" statementType="STATEMENT">
		INSERT INTO <include refid="table" /> ${sql}
	</insert>

	<insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true">
		INSERT INTO <include refid="table" />
			(apk_id, dpi_type, file_id, width, height)
		VALUES
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.apkId}, #{item.dpiType}, #{item.fileId}, #{item.width}, #{item.height})
		</foreach>
	</insert>
	
	<delete id="deleteBySql" statementType="STATEMENT">
		DELETE FROM <include refid="table" /> ${sql}
	</delete>
	
	<delete id="deleteByMultiValue" statementType="STATEMENT">
		DELETE FROM <include refid="table"/>
		WHERE 
		<foreach item="item" index="index" collection="cols" separator=" and">
			${cols[index]} = ${vals[index]}
		</foreach>
	</delete>
	
	<update id="update">
		UPDATE <include refid="table" />
		<set>
			apk_id = #{apkId},
			dpi_type = #{dpiType},
			file_id = #{fileId},
			width = #{width},
			height = #{height}
		</set>
		WHERE
			ID = #{id}
	</update>
	
	<update id="updateBySql" statementType="STATEMENT">
		UPDATE <include refid="table" /> ${sql}
	</update>
	
	<update id="updateMultiValueByMultiValue" statementType="STATEMENT">
		UPDATE <include refid="table" />
		SET
		<foreach item="item" index="index" collection="cols" separator=" ,">
			<if test="vals[index] != null">
			${cols[index]} = ${vals[index]}
			</if>
			<if test="vals[index] == null">
			${cols[index]} = null
			</if>
		</foreach>
		WHERE
		<foreach item="item" index="index" collection="keyCols" separator=" and">
			${keyCols[index]} = ${keyVals[index]}
		</foreach>
	</update>

	<select id="queryBySql" resultMap="resultMap" statementType="STATEMENT">
		SELECT * FROM <include refid="table" /> 
		<where>
			<if test="sqls.length > 0">
				<foreach item="item" index="index" collection="sqls" separator=" and">
					${item}
				</foreach>
			</if>
		</where>
		<if test="orders != null">
			<if test="orders.length > 0">
				ORDER BY
				<foreach item="item" index="index" collection="orders" separator=" ,">
					${item}
				</foreach>
			</if>
		</if>
	</select>

	<select id="queryUniqueByMultiValue" resultMap="resultMap" statementType="STATEMENT">
		SELECT *
		FROM <include refid="table" />
		WHERE
		<foreach index="index" item="item" collection="cols" separator=" and">
			${cols[index]} = ${vals[index]}
		</foreach>
	</select>
	
	<select id="queryByMultiValue" resultMap="resultMap" statementType="STATEMENT">
		SELECT *
		FROM <include refid="table" />
		WHERE
		<foreach item="item" index="index" collection="cols" separator=" and">
			${cols[index]} = ${vals[index]}
		</foreach>
	</select>
	
	<select id="queryByMultiValueByMultiOrder" resultMap="resultMap" statementType="STATEMENT">
		SELECT * 
		FROM <include refid="table"/>
		WHERE
		<foreach item="item" index="index" collection="cols" separator=" and">
			${cols[index]} = ${vals[index]}
		</foreach>
		ORDER BY
		<foreach item="item" index="index" collection="orderBys" separator=", ">
			${orderBys[index]} ${orders[index]}
		</foreach>
	</select>
	
	<select id="queryCountByMultiValue" resultType="java.lang.Integer" statementType="STATEMENT">
		SELECT count(1) 
		FROM <include refid="table"/>
		WHERE
		<foreach item="item" index="index" collection="cols" separator=" and">
			${cols[index]} = ${vals[index]}
		</foreach>
	</select>
	
	<select id="queryByPage" resultMap="resultMap" statementType="STATEMENT">
		SELECT * 
		FROM <include refid="table"/>
		<where>
			<if test="filters.size() > 0">
				<foreach item="item" index="index" collection="filters" separator=" and">
					<if test="filters[index].sql == null">
						${filters[index].propertyName} ${filters[index].matchType} ${filters[index].propertyValue}
					</if>
					<if test="filters[index].sql != null">
						${filters[index].sql}
					</if>
				</foreach>
			</if>
		</where>
	</select>
	
	<select id="queryByLikeValue" resultMap="resultMap" statementType="STATEMENT">
		SELECT * 
		FROM <include refid="table"/>
		WHERE ${col} LIKE CONCAT('%', '${val}', '%')
	</select>

	<select id="isUniqueByMultiValue" resultType="java.lang.Boolean" statementType="STATEMENT">
		SELECT count(1) = 0
		FROM <include refid="table" />
		WHERE
		<foreach item="item" index="index" collection="cols" separator=" and">
			${cols[index]} = ${vals[index]}
		</foreach>
	</select>

</mapper>
