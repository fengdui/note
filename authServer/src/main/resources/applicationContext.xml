<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:property-placeholder location="classpath:db.properties"/>

    <!--<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">-->
        <!--<property name="config">-->
            <!--<bean class="com.google.code.kaptcha.util.Config">-->
                <!--<constructor-arg>-->
                    <!--<props>-->
                        <!--<prop key="kaptcha.border">yes</prop>-->
                        <!--<prop key="kaptcha.border.color">105,179,90</prop>-->
                        <!--<prop key="kaptcha.textproducer.font.color">blue</prop>-->
                        <!--<prop key="kaptcha.image.width">250</prop>-->
                        <!--<prop key="kaptcha.image.height">90</prop>-->
                        <!--<prop key="kaptcha.textproducer.font.size">80</prop>-->
                        <!--<prop key="kaptcha.session.key">code</prop>-->
                        <!--<prop key="kaptcha.textproducer.char.length">4</prop>-->
                        <!--<prop key="kaptcha.textproducer.font.names">瀹嬩綋,妤蜂綋,寰蒋闆呴粦</prop>-->
                    <!--</props>-->
                <!--</constructor-arg>-->
            <!--</bean>-->
        <!--</property>-->
    <!--</bean>-->
	<bean id="BasicDataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="url" value="${dbcp2.url}"/>
        <property name="driverClassName" value="${dbcp2.driverClassName}"/>
        <property name="username" value="${dbcp2.username}"/>
        <property name="password" value="${dbcp2.password}"/>
        <property name="initialSize" value="${dbcp2.initialSize}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${dbcp2.timeBetweenEvictionRunsMillis}"/>
        <property name="poolPreparedStatements" value="${dbcp2.poolPreparedStatements}"/>
        <property name="maxOpenPreparedStatements" value="${dbcp2.maxOpenPreparedStatements}"/>
        <property name="removeAbandonedTimeout" value="${dbcp2.removeAbandonedTimeout}"/>
        <property name="testOnBorrow" value="${dbcp2.testOnBorrow}"/>
        <property name="testOnReturn" value="${dbcp2.testOnReturn}"/>
        <property name="testWhileIdle" value="${dbcp2.testWhileIdle}"/>
    </bean>
    <bean id="BasicDataSource2" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="url" value="${dbcp2.url}"/>
        <property name="driverClassName" value="${dbcp2.driverClassName}"/>
        <property name="username" value="${dbcp2.username}"/>
        <property name="password" value="${dbcp2.password}"/>
        <property name="initialSize" value="${dbcp2.initialSize}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${dbcp2.timeBetweenEvictionRunsMillis}"/>
        <property name="poolPreparedStatements" value="${dbcp2.poolPreparedStatements}"/>
        <property name="maxOpenPreparedStatements" value="${dbcp2.maxOpenPreparedStatements}"/>
        <property name="removeAbandonedTimeout" value="${dbcp2.removeAbandonedTimeout}"/>
        <property name="testOnBorrow" value="${dbcp2.testOnBorrow}"/>
        <property name="testOnReturn" value="${dbcp2.testOnReturn}"/>
        <property name="testWhileIdle" value="${dbcp2.testWhileIdle}"/>
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean name="scannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <property name="basePackage" value="com.lutai.admin.*.dao"/>
    </bean>
    <bean id="sqlTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--&lt;!&ndash; 浣跨敤annotation瀹氫箟浜嬪姟 &ndash;&gt;-->
    <!--<aop:aspectj-autoproxy expose-proxy="true"/>-->
    <!--<bean id="test" class="com.zheyue.authserver.controller.TestBean"></bean>-->
    <!--<bean id="a" class="com.zheyue.authserver.controller.AspectTest"></bean>-->

    <tx:annotation-driven transaction-manager="sqlTransactionManager" order="2"/>
    <bean id="userService" class="com.zheyue.authserver.service.impl.UserServiceImpl"></bean>


    <!-- 配置多数据源映射关系 -->
    <bean id="dataSource" class="com.zheyue.authserver.datasource.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="dataSource1" value-ref="BasicDataSource"></entry>
                <entry key="dataSource2" value-ref="BasicDataSource2"></entry>
            </map>
        </property>
        <!-- 默认目标数据源为你主库数据源 -->
        <property name="defaultTargetDataSource" ref="BasicDataSource"/>
    </bean>
    <bean id="exchange" class="com.zheyue.authserver.datasource.DataSourceExchange"></bean>
    <aop:config expose-proxy="true">
        <aop:pointcut id="pointcut" expression="execution(* *.save*(..))"/>
        <aop:advisor advice-ref="exchange" pointcut-ref="pointcut" order="1"/>
    </aop:config>
</beans>